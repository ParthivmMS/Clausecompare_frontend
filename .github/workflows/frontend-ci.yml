name: Backend CI

on:
  pull_request:
    branches: [ main, develop ]
    paths:
      - '**.py'
      - 'requirements.txt'
      - 'Dockerfile'
      - '.github/workflows/backend-ci.yml'
  push:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ['3.11', '3.12']

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install flake8 black

    - name: Lint with flake8
      run: |
        # Stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # Exit-zero treats all errors as warnings
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Check code formatting with black
      run: |
        black --check .
      continue-on-error: true

    - name: Run tests
      run: |
        pytest tests/ -v --tb=short

    - name: Test coverage
      run: |
        pip install pytest-cov
        pytest tests/ --cov=. --cov-report=xml --cov-report=term
      continue-on-error: true

    - name: Upload coverage reports
      if: matrix.python-version == '3.11'
      uses: codecov/codecov-action@v3
      with:
        files: ./coverage.xml
        fail_ci_if_error: false

  docker-build:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Build Docker image
      run: |
        docker build -t clausecompare-backend:test .

    - name: Test Docker image
      run: |
        docker run -d -p 8000:8000 --name test-backend clausecompare-backend:test
        sleep 10
        curl -f http://localhost:8000/health || exit 1
        docker stop test-backend
        docker rm test-backend
