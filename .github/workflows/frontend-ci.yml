name: Frontend CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  lint-and-build:
    name: Lint and Build
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run ESLint
      run: npm run lint
      continue-on-error: false

    - name: Build application
      run: npm run build
      env:
        API_URL: http://localhost:8000
        NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY: ""

    - name: Check build output
      run: |
        if [ ! -d ".next" ]; then
          echo "‚ùå Build failed: .next directory not found"
          exit 1
        fi
        echo "‚úÖ Build successful: .next directory exists"

    - name: Upload build artifacts
      if: matrix.node-version == '20.x' && github.event_name == 'push'
      uses: actions/upload-artifact@v4
      with:
        name: next-build
        path: |
          .next
          public
        retention-days: 7
        if-no-files-found: error

    - name: Build summary
      if: always()
      run: |
        echo "### Build Summary üìä" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "- **Node Version**: ${{ matrix.node-version }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Build Status**: ${{ job.status }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Commit**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY

  type-check:
    name: Type Check (Optional)
    runs-on: ubuntu-latest
    continue-on-error: true

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run TypeScript check (if tsconfig exists)
      run: |
        if [ -f "tsconfig.json" ]; then
          npx tsc --noEmit
          echo "‚úÖ TypeScript check passed"
        else
          echo "‚è≠Ô∏è No tsconfig.json found, skipping TypeScript check"
        fi
